version: 2.1
            
jobs:
  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Build frontend
          command: |
            cd ~/project/app
            npm install
            npm run build
      - save_cache:
          paths: [app/node_modules]
          key: frontend-build
       
  lint-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Frontend lint
          command: |
            cd ~/project/app
            npm run lint

  test-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Frontend test
          command: |
            cd ~/project/app
            npm install
            npm run test
            
  scan-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Frontend scan for vulnerabilities
          command: |
            cd ~/project/app
            npm install
            npm audit fix --audit-level=critical --force

  lint-dockerfile:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Lint Dockerfile
          command: |
            cd ~/project/
            hadolint Dockerfile

  build-docker-image:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Build Docker image
          command: |
            cd ~/project/
            ./run_docker.sh

  upload-docker-image:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Upload Docker image
          command: |
            cd ~/project/
            ./upload_docker.sh

  
            
workflows:
  default:
    jobs:
      - build-frontend
      - lint-frontend:
          requires: [build-frontend]
      - test-frontend:
          requires: [build-frontend]
      - scan-frontend:
          requires: [test-frontend]
      - lint-dockerfile
      - build-docker-image:
          requires: [lint-dockerfile, lint-frontend, scan-frontend]
      - upload-docker-image:
          requires: [build-docker-image]