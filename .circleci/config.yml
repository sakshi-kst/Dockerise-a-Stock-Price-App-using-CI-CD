version: 2.1
            
jobs:
  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Build frontend
          command: |
            cd ~/project/app
            npm install
            npm run build
      - save_cache:
          paths: [app/node_modules]
          key: frontend-build
       
  lint-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Frontend lint
          command: |
            cd ~/project/app
            npm run lint
            
  scan-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Frontend scan for vulnerabilities
          command: |
            cd ~/project/app
            npm audit fix --audit-level=critical --force

  lint-dockerfile:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Lint Dockerfile
          command: |
            sudo wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64
            sudo chmod +x /bin/hadolint
            cd ~/project/
            sudo hadolint Dockerfile

  build-upload-docker-image:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
      - run:
          name: Build and Upload Docker image
          command: |
            docker build --tag=udacityproject .
            docker image ls
            dockerpath=sakshikst/udacityproject
            docker login -u sakshikst -p $password
            echo "Docker ID and Image: $dockerpath"
            docker tag udacityproject $dockerpath
            docker push $dockerpath

  deploy-to-k8s:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Deploy image to Kubernetes
          command: |
            aws eks --region us-east-2 update-kubeconfig --name sakshiudacity 
            kubectl config use-context arn:aws:eks:us-east-2:035491818280:cluster/sakshiudacity 
            kubectl apply -f deployment.yaml
            kubectl get nodes
            kubectl get deployments
            kubectl get pod -o wide
            kubectl get service/sakshiudacity



workflows:
  default:
    jobs:
      - deploy-to-k8s
